class Solution
{
    public:
        unordered_set<int> hashmap;

    vector<vector < int>> permute(vector<int> &nums)
    {
        int n = nums.size();
        vector<int> ds;
        vector<vector < int>> ans;
        f(n, ds, ans, nums);
        return ans;
    }

    void f(int n, vector<int> &ds, vector<vector< int >> &ans, vector< int > &nums)
    {
        if (ds.size() == n)
        {
            ans.push_back(ds);
            return;
        }
        for (int i = 0; i < n; i++)
        {
            if (hashmap.find(nums[i]) != hashmap.end())
                continue;
            ds.push_back(nums[i]);
            hashmap.insert(nums[i]);
            f(n, ds, ans, nums);
            ds.pop_back();
            hashmap.erase(nums[i]);
        }
    }
};
