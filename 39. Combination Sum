class Solution
{
    public:
        vector<vector < int>> combinationSum(vector<int> &candidates, int target)
        {
            vector<vector < int>> ans;
            vector<int> ds;
            int i = 0;
            int n = candidates.size();
            f1(i, n, ds, ans, target, candidates);
            return ans;
        }
    void f1(int i, int n, vector<int> &ds, vector<vector< int >> &ans, int target, vector< int > &candidates)
    {
        if (i == n)
        {
            if (target == 0)
            {
                ans.push_back(ds);
                return;
            }
            return;
        }
        if (candidates[i] <= target)
        {
            ds.push_back(candidates[i]);
            f1(i, n, ds, ans, target - candidates[i], candidates);
            ds.pop_back();
        }

        f1(i + 1, n, ds, ans, target, candidates);
    }
};
